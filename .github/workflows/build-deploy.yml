name: Build and Deploy Code

on: [push , pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with: 
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pytest 
      

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: deploying to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}





# name: Build and Deploy code
# on: [pull , push_request]

# jobs:
#   build:
#     environment:
#       name: testing
#     env:
#       DATABASE_NAME: ${{secrets.DATABASE_NAME}}
#       DATABASE_HOST: ${{secrets.DATABASE_HOST}}
#       DATABASE_PORT: ${{secrets.DATABASE_PORT}}
#       DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
#       DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
#       SECRET_KEY: ${{secrets.SECRET_KEY}}
#       ALGORITHM: ${{secrets.ALGORITHM}}
#       ACCESS_TIME_EXPIRE_MINUTES: ${{secrets.ACCESS_TIME_EXPIRE_MINUTES}}
#     services:
#       postgres:
#         image: postgres
#       env:
#         POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
#         POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
#       ports:
#         - 5432:5432
#       options: >-
#         --health-cmd pg_isready
#         --health-interval 10s
#         --health-timeout 5s
#         --health-retries 5
#     runs-on: ubuntu-latest
#     steps:
#       - name: pulling git repo
#         uses: actions/checkout@v2
#       - name: install python version 3.9
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.9'
#       - name: update pip
#         run: python -m install pip --upgrade pip
#       - name: install requirements
#         run: pip install -r requirements.txt
#       - name: test with pytest
#         run: |
#           pytest
      
#   deploy:
#     runs-on: ubuntu-latest
#     needs: [build]
#     environment:
#       name: production
#     steps:
#       - name: pulling git repo
#         uses: actions/checkout@v2
#       - name: deploying to heroku
#         uses: akhileshns/heroku-deploy@v3.12.12
#         with:
#           HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
#           HEROKU_EMAIL: ${{secrets.HEROKU_EMAIL}}
#           HEROKU_APP_NAME: ${{secrts.HEROKU_APP_NAME}}



